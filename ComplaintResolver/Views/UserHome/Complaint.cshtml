@model ComplaintResolver.Model.ComplaintForm

@{
    ViewBag.Title = "Complaint";
}


@if (ViewBag.Message != null && Convert.ToBoolean(ViewBag.Status))
{
    <div class="alert alert-success mt-5">
        <strong>Success !!!</strong>
        @ViewBag.Message
    </div>

}
else
{

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" });

        <div class="form-horizontal mt-5">
            <div class="col-lg-12 form-group border border-dark rounded" style="background-color:aqua;">
                <div class="card mt-3">
                    <h2 class="card-header text-center" style="background-color:brown">
                        Complaint Form
                    </h2>
                </div>

                <div class="form-row mt-5">
                    <div class="col-lg-3 col-md-3 col-sm-3">

                    </div>

                    <div class="col-lg-9 col-md-9 col-sm-9">
                        <div class="row">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label font-weight-bold" })
                            </div>
                            <div class="col-md-6">
                                <input class="form-control text-box single-line" data-val="true" data-val-number="The field User_Id must be a number." data-val-required="The User_Id field is required." id="User" name="User" type="text" value="@User.Identity.Name" readonly>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-row mt-4">
                    <div class="col-lg-3 col-md-3 col-sm-3">

                    </div>
                    <div class="col-lg-9 col-md-9 col-sm-9">
                        <div class="row">
                            @Html.LabelFor(model => model.ProductType, htmlAttributes: new { @class = "control-label col-md-3 font-weight-bold" })
                            <div class="col-md-9">
                                @Html.EnumDropDownListFor(model => model.ProductType, new { htmlAttributes = new { @class = "form-control dropdown font-weight-bold" } })
                                @Html.ValidationMessageFor(model => model.ProductType, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>
                </div>



                <div class="form-row mt-4">
                    <div class="col-lg-3 col-md-3 col-sm-3">

                    </div>
                    <div class="col-lg-9 col-md-9 col-sm-9">
                        <div class="row">
                            @Html.LabelFor(model => model.ComplaintType, htmlAttributes: new { @class = "control-label col-md-3 font-weight-bold" })
                            <div class="col-md-9">
                                @Html.EnumDropDownListFor(model => model.ComplaintType, new { htmlAttributes = new { @class = "form-control font-weight-bold" } })
                                @Html.ValidationMessageFor(model => model.ComplaintType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-row mt-4">
                    <div class="col-lg-3 col-md-3 col-sm-3">

                    </div>
                    <div class="col-lg-9 col-md-9 col-sm-9">
                        <div class="row">
                            @Html.LabelFor(model => model.ComplaintDescription, htmlAttributes: new { @class = "control-label col-md-3 font-weight-bold" })
                            <div class="col-md-6 col-sm-10">
                                @Html.TextAreaFor(model => model.ComplaintDescription, 5, 40, new { htmlAttributes = new { @class = "form-control", style = "resize: none;" } })
                                @Html.ValidationMessageFor(model => model.ComplaintDescription, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>
                </div>



                <div class="form-row mt-4">
                    <div class="col-lg-3 col-md-3 col-sm-3">

                    </div>
                    <div class="col-lg-9 col-md-9 col-sm-9">
                        <div class="row">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-3 font-weight-bold" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group text-center mt-5">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-danger" />
                    </div>
                </div>
            </div>
        </div>

    }

    if (ViewBag.Message != null)
    {
        <div class="alert alert-danger">
            <strong>Error !</strong>
            @ViewBag.Message
        </div>
    }


}

