@model ComplaintResolver.Model.Feedback

@{
    ViewBag.Title = "AddUserFeedback";
}

<h2>User Feedback</h2>

@if (ViewBag.Status == true && ViewBag.Message != null)
{

    <div class="mt-5 alert alert-success">
        <h1>@ViewBag.Message</h1>
    </div>
}
else
{


    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Feedback</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.ComplaintId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ComplaintId, new { htmlAttributes = new { @class = "form-control col-md-5", @readonly = "readonly", @Value = ViewBag.ComplaintId } })
                    @Html.ValidationMessageFor(model => model.ComplaintId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Message, 5, 30, new { htmlAttributes = new { @class = "form-control col-md-6" } })
                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add" class="btn btn-success" />
                </div>
            </div>
        </div>
    }


}

<div class="mt-5">
    @Html.ActionLink("Back to List", "GetAllComplaints", "UserHome", null, new { @class = "btn btn-dark" })
</div>
